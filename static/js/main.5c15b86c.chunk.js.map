{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","ufs","setUfs","selectedUf","setSelectedUf","cities","setCities","selectedCity","setSelectedCity","selectedMapPosition","setSelectedMapPosition","inititalMapPosition","setInititalMapPosition","selectedItems","setSelectedItems","name","email","whatsapp","formData","setFormData","confirm","setConfirm","useHistory","handleInputChange","event","target","value","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","response","data","ufInitials","map","uf","sigla","toLowerCase","cityNames","city","nome","onSubmit","e","preventDefault","console","log","handleSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","handleSelectUf","key","item","includes","findIndex","filteredItems","filter","handleSelectItem","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c15b86c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport logo from '../../assets/logo.svg';\r\nimport './styles.css';\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\" />\r\n                </header>\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de resíduos</h1>\r\n                    <p>ajudamos pessoas  a encontrarem pontos de coleta de forma eficiente</p>\r\n                    <Link to=\"/Ecoleta_Web/create-point\">\r\n                        <span>\r\n                            <FiLogIn />\r\n                        </span>\r\n                        <strong>Cadastre um ponto de coleta</strong>\r\n                    </Link>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\nimport { deflate } from 'zlib';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://nlw-ecoleta-web.herokuapp.com/'\r\n})\r\n\r\nexport default api","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport api from '../../services/api';\r\nimport axios from 'axios';\r\n\r\nimport { FiArrowLeft, FiCheckCircle } from 'react-icons/fi';\r\nimport logo from '../../assets/logo.svg';\r\nimport './styles.css';\r\n\r\ninterface Item {\r\n    id: number,\r\n    title: string,\r\n    image_url: string,\r\n    active: boolean\r\n}\r\n\r\ninterface Point {\r\n    id: number\r\n    name: string\r\n    email: string\r\n    whatsapp: string\r\n}\r\n\r\ninterface IBGE_UF_Response {\r\n    id: number\r\n    sigla: string\r\n    nome: string\r\n}\r\ninterface IBGE_City_Response {\r\n    nome: string\r\n}\r\n\r\nconst CreatePoint: React.FC = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [whatsapp, setWhatsapp] = useState('');\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [itemActive, setItemActive] = useState(false)\r\n    const [ufs, setUfs] = useState<string[]>([])\r\n    const [selectedUf, setSelectedUf] = useState('0')\r\n    const [cities, setCities] = useState<string[]>([])\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedMapPosition, setSelectedMapPosition] = useState<[number, number]>([0, 0]);\r\n    const [inititalMapPosition, setInititalMapPosition] = useState<[number, number]>([0, 0]);\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: ''\r\n    });\r\n    const [confirm, setConfirm] = useState(' ');\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        //  carregando a localização atual do usuário no mapa\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords\r\n            setInititalMapPosition([latitude, longitude])\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // listando todos os items de coleta\r\n        api.get('items').then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGE_UF_Response[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n            .then(response => {\r\n                const ufInitials = response.data.map(uf => uf.sigla)\r\n                setUfs(ufInitials)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // carregar as cidades sempre que a UF mudar \r\n        if (selectedUf === '0') {\r\n            return\r\n        }\r\n        axios.get<IBGE_City_Response[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf.toLowerCase()}/municipios`)\r\n            .then(response => {\r\n                const cityNames = response.data.map(city => city.nome)\r\n                setCities(cityNames)\r\n            })\r\n    }, [selectedUf])\r\n    // carregando a tela da confirmação de cadastro do ponto, sempre que o ponto for cadastrado\r\n    useEffect(() => {\r\n\r\n        setConfirm(confirm)\r\n    }, [confirm])\r\n\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target\r\n        // pega todos os dados que já existiam no formData e insere novos\r\n        // insere o valor baseado no nome do campo(name,email,whatsapp)...\r\n        setFormData({ ...formData, [name]: value })\r\n    }\r\n\r\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n        let uf = event.target.value\r\n        setSelectedUf(uf)\r\n    }\r\n\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        let city = event.target.value\r\n        setSelectedCity(city)\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent) {\r\n        // pegando a latitude e longitude ao clicar no mapa\r\n        setSelectedMapPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng\r\n        ])\r\n    }\r\n\r\n    function handleSelectItem(id: number) {\r\n\r\n        const alreadySelectedItem = selectedItems.findIndex(item => item === id)\r\n        if (alreadySelectedItem >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id)\r\n            setSelectedItems(filteredItems)\r\n        } else {\r\n            setSelectedItems([...selectedItems, id])\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(event: FormEvent) {\r\n        // impede o recarregamento da página\r\n        event.preventDefault()\r\n\r\n        const { whatsapp, email, name } = formData\r\n        const uf = selectedUf\r\n        const city = selectedCity\r\n        const [latitude, longitude] = selectedMapPosition\r\n        const items = selectedItems\r\n\r\n        const data = {\r\n            name,\r\n            whatsapp,\r\n            email,\r\n            uf,\r\n            city,\r\n            latitude,\r\n            longitude,\r\n            items\r\n        }\r\n\r\n        // await api.post('point', data)\r\n        setConfirm('visible')\r\n        console.log('confirm :>> ', confirm)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"page-create-point\">\r\n                <header>\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to='/' >\r\n                        <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n                </header>\r\n\r\n                <form onSubmit={e => handleSubmit(e)}>\r\n                    <h1>Cadastro do<br /> ponto de coleta</h1>\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Dados</h2>\r\n                        </legend>\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">Nome da Entidade</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id='name'\r\n                                name='name'\r\n                                onChange={e => handleInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"field-group\">\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"Email\">Email</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id='email'\r\n                                    name='email'\r\n                                    onChange={e => handleInputChange(e)} />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"Whatsapp\">Whatsapp</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id='whatsapp'\r\n                                    name='whatsapp'\r\n                                    onChange={e => handleInputChange(e)} />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Endereço</h2>\r\n                            <span>Selecione o endereço no mapa</span>\r\n                        </legend>\r\n                        {/* Geolocalização */}\r\n                        <Map center={inititalMapPosition} zoom={12} onClick={handleMapClick}>\r\n                            <TileLayer\r\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            />\r\n                            <Marker position={selectedMapPosition}></Marker>\r\n                        </Map>\r\n                        <div className=\"field-group\">\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"uf\">Estado(UF)</label>\r\n                                <select\r\n                                    id='uf'\r\n                                    name='uf'\r\n                                    value={selectedUf}\r\n                                    onChange={e => handleSelectUf(e)}   >\r\n\r\n                                    <option value=\"0\">Selecione uma UF: </option>\r\n                                    {ufs.map(uf => (\r\n                                        <option key={uf} value={uf}>{uf}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"city\">Cidade</label>\r\n                                <select\r\n                                    id='city'\r\n                                    name='city'\r\n                                    value={selectedCity}\r\n                                    onChange={handleSelectCity} >\r\n\r\n                                    <option value=\"0\">Selecione uma city</option>\r\n                                    {cities.map(city => (\r\n                                        <option key={city} value={city}>{city}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Ítems de coleta</h2>\r\n                            <span>Selecione um ou mais ítens abaixo</span>\r\n                        </legend>\r\n                        {/* listagem de items de coleta */}\r\n                        <ul className='items-grid'>\r\n                            {\r\n                                items.map(item => (\r\n                                    <li key={item.id} className={selectedItems.includes(item.id) ? 'selected' : ''} onClick={() => handleSelectItem(item.id)} >\r\n                                        <img src={item.image_url} alt={item.title} />\r\n                                        <span>{item.title}</span>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </fieldset>\r\n\r\n                    <button type=\"submit\">Cadastrar Ponto de Coleta</button>\r\n                </form>\r\n            </div >\r\n\r\n            <div id='page-alert-confirm' className={confirm}>\r\n                <Link to='/'>\r\n                    <FiCheckCircle />\r\n                    <h1>Cadastro concluído!</h1>\r\n                </Link>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePoint;","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport CreatePoint from './pages/CreatePoint';\r\n\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route component={Home} path='/Ecoleta_Web/' exact></Route>\r\n            <Route component={CreatePoint} path='/Ecoleta_Web/create-point'></Route>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}